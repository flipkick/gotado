// Code generated by go-swagger; DO NOT EDIT.

package home

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/gonzolino/gotado/api/models"
)

// NewUpdatePresenceLockParams creates a new UpdatePresenceLockParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdatePresenceLockParams() *UpdatePresenceLockParams {
	return &UpdatePresenceLockParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdatePresenceLockParamsWithTimeout creates a new UpdatePresenceLockParams object
// with the ability to set a timeout on a request.
func NewUpdatePresenceLockParamsWithTimeout(timeout time.Duration) *UpdatePresenceLockParams {
	return &UpdatePresenceLockParams{
		timeout: timeout,
	}
}

// NewUpdatePresenceLockParamsWithContext creates a new UpdatePresenceLockParams object
// with the ability to set a context for a request.
func NewUpdatePresenceLockParamsWithContext(ctx context.Context) *UpdatePresenceLockParams {
	return &UpdatePresenceLockParams{
		Context: ctx,
	}
}

// NewUpdatePresenceLockParamsWithHTTPClient creates a new UpdatePresenceLockParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdatePresenceLockParamsWithHTTPClient(client *http.Client) *UpdatePresenceLockParams {
	return &UpdatePresenceLockParams{
		HTTPClient: client,
	}
}

/* UpdatePresenceLockParams contains all the parameters to send to the API endpoint
   for the update presence lock operation.

   Typically these are written to a http.Request.
*/
type UpdatePresenceLockParams struct {

	/* HomeID.

	   The ID of a home.

	   Format: int64
	*/
	HomeID int64

	/* JSON.

	   The new presence settings.
	*/
	JSON *models.HomePresence

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update presence lock params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdatePresenceLockParams) WithDefaults() *UpdatePresenceLockParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update presence lock params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdatePresenceLockParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update presence lock params
func (o *UpdatePresenceLockParams) WithTimeout(timeout time.Duration) *UpdatePresenceLockParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update presence lock params
func (o *UpdatePresenceLockParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update presence lock params
func (o *UpdatePresenceLockParams) WithContext(ctx context.Context) *UpdatePresenceLockParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update presence lock params
func (o *UpdatePresenceLockParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update presence lock params
func (o *UpdatePresenceLockParams) WithHTTPClient(client *http.Client) *UpdatePresenceLockParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update presence lock params
func (o *UpdatePresenceLockParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithHomeID adds the homeID to the update presence lock params
func (o *UpdatePresenceLockParams) WithHomeID(homeID int64) *UpdatePresenceLockParams {
	o.SetHomeID(homeID)
	return o
}

// SetHomeID adds the homeId to the update presence lock params
func (o *UpdatePresenceLockParams) SetHomeID(homeID int64) {
	o.HomeID = homeID
}

// WithJSON adds the json to the update presence lock params
func (o *UpdatePresenceLockParams) WithJSON(json *models.HomePresence) *UpdatePresenceLockParams {
	o.SetJSON(json)
	return o
}

// SetJSON adds the json to the update presence lock params
func (o *UpdatePresenceLockParams) SetJSON(json *models.HomePresence) {
	o.JSON = json
}

// WriteToRequest writes these params to a swagger request
func (o *UpdatePresenceLockParams) WriteToRequest(r runtime.ClientRequest, _ strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param home_id
	if err := r.SetPathParam("home_id", swag.FormatInt64(o.HomeID)); err != nil {
		return err
	}
	if o.JSON != nil {
		if err := r.SetBodyParam(o.JSON); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
