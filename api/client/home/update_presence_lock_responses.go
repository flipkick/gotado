// Code generated by go-swagger; DO NOT EDIT.

package home

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/gonzolino/gotado/api/models"
)

// UpdatePresenceLockReader is a Reader for the UpdatePresenceLock structure.
type UpdatePresenceLockReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdatePresenceLockReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdatePresenceLockOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdatePresenceLockBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdatePresenceLockUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdatePresenceLockForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdatePresenceLockNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdatePresenceLockUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdatePresenceLockOK creates a UpdatePresenceLockOK with default headers values
func NewUpdatePresenceLockOK() *UpdatePresenceLockOK {
	return &UpdatePresenceLockOK{}
}

/* UpdatePresenceLockOK describes a response with status code 200, with default header values.

Presence mode successfully updated.
*/
type UpdatePresenceLockOK struct {
}

func (o *UpdatePresenceLockOK) Error() string {
	return fmt.Sprintf("[PUT /homes/{home_id}/presenceLock][%d] updatePresenceLockOK ", 200)
}

func (o *UpdatePresenceLockOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePresenceLockBadRequest creates a UpdatePresenceLockBadRequest with default headers values
func NewUpdatePresenceLockBadRequest() *UpdatePresenceLockBadRequest {
	return &UpdatePresenceLockBadRequest{}
}

/* UpdatePresenceLockBadRequest describes a response with status code 400, with default header values.

Bad request, wrong type of parameters, etc.
*/
type UpdatePresenceLockBadRequest struct {
	Payload *models.ClientErrorModel
}

func (o *UpdatePresenceLockBadRequest) Error() string {
	return fmt.Sprintf("[PUT /homes/{home_id}/presenceLock][%d] updatePresenceLockBadRequest  %+v", 400, o.Payload)
}
func (o *UpdatePresenceLockBadRequest) GetPayload() *models.ClientErrorModel {
	return o.Payload
}

func (o *UpdatePresenceLockBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClientErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePresenceLockUnauthorized creates a UpdatePresenceLockUnauthorized with default headers values
func NewUpdatePresenceLockUnauthorized() *UpdatePresenceLockUnauthorized {
	return &UpdatePresenceLockUnauthorized{}
}

/* UpdatePresenceLockUnauthorized describes a response with status code 401, with default header values.

User authentication failed.
*/
type UpdatePresenceLockUnauthorized struct {
	Payload *models.ClientErrorModel
}

func (o *UpdatePresenceLockUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /homes/{home_id}/presenceLock][%d] updatePresenceLockUnauthorized  %+v", 401, o.Payload)
}
func (o *UpdatePresenceLockUnauthorized) GetPayload() *models.ClientErrorModel {
	return o.Payload
}

func (o *UpdatePresenceLockUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClientErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePresenceLockForbidden creates a UpdatePresenceLockForbidden with default headers values
func NewUpdatePresenceLockForbidden() *UpdatePresenceLockForbidden {
	return &UpdatePresenceLockForbidden{}
}

/* UpdatePresenceLockForbidden describes a response with status code 403, with default header values.

Authenticated user has no access rights to the requested entity.
*/
type UpdatePresenceLockForbidden struct {
	Payload *models.ClientErrorModel
}

func (o *UpdatePresenceLockForbidden) Error() string {
	return fmt.Sprintf("[PUT /homes/{home_id}/presenceLock][%d] updatePresenceLockForbidden  %+v", 403, o.Payload)
}
func (o *UpdatePresenceLockForbidden) GetPayload() *models.ClientErrorModel {
	return o.Payload
}

func (o *UpdatePresenceLockForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClientErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePresenceLockNotFound creates a UpdatePresenceLockNotFound with default headers values
func NewUpdatePresenceLockNotFound() *UpdatePresenceLockNotFound {
	return &UpdatePresenceLockNotFound{}
}

/* UpdatePresenceLockNotFound describes a response with status code 404, with default header values.

Requested entity not found.
*/
type UpdatePresenceLockNotFound struct {
	Payload *models.ClientErrorModel
}

func (o *UpdatePresenceLockNotFound) Error() string {
	return fmt.Sprintf("[PUT /homes/{home_id}/presenceLock][%d] updatePresenceLockNotFound  %+v", 404, o.Payload)
}
func (o *UpdatePresenceLockNotFound) GetPayload() *models.ClientErrorModel {
	return o.Payload
}

func (o *UpdatePresenceLockNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClientErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePresenceLockUnprocessableEntity creates a UpdatePresenceLockUnprocessableEntity with default headers values
func NewUpdatePresenceLockUnprocessableEntity() *UpdatePresenceLockUnprocessableEntity {
	return &UpdatePresenceLockUnprocessableEntity{}
}

/* UpdatePresenceLockUnprocessableEntity describes a response with status code 422, with default header values.

The request was well-formed but was unable to be followed due to semantic errors.
*/
type UpdatePresenceLockUnprocessableEntity struct {
	Payload *models.ClientErrorModel
}

func (o *UpdatePresenceLockUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /homes/{home_id}/presenceLock][%d] updatePresenceLockUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *UpdatePresenceLockUnprocessableEntity) GetPayload() *models.ClientErrorModel {
	return o.Payload
}

func (o *UpdatePresenceLockUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClientErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
