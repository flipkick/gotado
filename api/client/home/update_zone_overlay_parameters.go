// Code generated by go-swagger; DO NOT EDIT.

package home

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/gonzolino/gotado/api/models"
)

// NewUpdateZoneOverlayParams creates a new UpdateZoneOverlayParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateZoneOverlayParams() *UpdateZoneOverlayParams {
	return &UpdateZoneOverlayParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateZoneOverlayParamsWithTimeout creates a new UpdateZoneOverlayParams object
// with the ability to set a timeout on a request.
func NewUpdateZoneOverlayParamsWithTimeout(timeout time.Duration) *UpdateZoneOverlayParams {
	return &UpdateZoneOverlayParams{
		timeout: timeout,
	}
}

// NewUpdateZoneOverlayParamsWithContext creates a new UpdateZoneOverlayParams object
// with the ability to set a context for a request.
func NewUpdateZoneOverlayParamsWithContext(ctx context.Context) *UpdateZoneOverlayParams {
	return &UpdateZoneOverlayParams{
		Context: ctx,
	}
}

// NewUpdateZoneOverlayParamsWithHTTPClient creates a new UpdateZoneOverlayParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateZoneOverlayParamsWithHTTPClient(client *http.Client) *UpdateZoneOverlayParams {
	return &UpdateZoneOverlayParams{
		HTTPClient: client,
	}
}

/* UpdateZoneOverlayParams contains all the parameters to send to the API endpoint
   for the update zone overlay operation.

   Typically these are written to a http.Request.
*/
type UpdateZoneOverlayParams struct {

	/* HomeID.

	   The ID of a home.

	   Format: int64
	*/
	HomeID int64

	/* JSON.

	   The new overlay settings.
	*/
	JSON *models.Overlay

	/* ZoneID.

	   The ID of a zone.

	   Format: int64
	*/
	ZoneID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update zone overlay params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateZoneOverlayParams) WithDefaults() *UpdateZoneOverlayParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update zone overlay params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateZoneOverlayParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update zone overlay params
func (o *UpdateZoneOverlayParams) WithTimeout(timeout time.Duration) *UpdateZoneOverlayParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update zone overlay params
func (o *UpdateZoneOverlayParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update zone overlay params
func (o *UpdateZoneOverlayParams) WithContext(ctx context.Context) *UpdateZoneOverlayParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update zone overlay params
func (o *UpdateZoneOverlayParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update zone overlay params
func (o *UpdateZoneOverlayParams) WithHTTPClient(client *http.Client) *UpdateZoneOverlayParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update zone overlay params
func (o *UpdateZoneOverlayParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithHomeID adds the homeID to the update zone overlay params
func (o *UpdateZoneOverlayParams) WithHomeID(homeID int64) *UpdateZoneOverlayParams {
	o.SetHomeID(homeID)
	return o
}

// SetHomeID adds the homeId to the update zone overlay params
func (o *UpdateZoneOverlayParams) SetHomeID(homeID int64) {
	o.HomeID = homeID
}

// WithJSON adds the json to the update zone overlay params
func (o *UpdateZoneOverlayParams) WithJSON(json *models.Overlay) *UpdateZoneOverlayParams {
	o.SetJSON(json)
	return o
}

// SetJSON adds the json to the update zone overlay params
func (o *UpdateZoneOverlayParams) SetJSON(json *models.Overlay) {
	o.JSON = json
}

// WithZoneID adds the zoneID to the update zone overlay params
func (o *UpdateZoneOverlayParams) WithZoneID(zoneID int64) *UpdateZoneOverlayParams {
	o.SetZoneID(zoneID)
	return o
}

// SetZoneID adds the zoneId to the update zone overlay params
func (o *UpdateZoneOverlayParams) SetZoneID(zoneID int64) {
	o.ZoneID = zoneID
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateZoneOverlayParams) WriteToRequest(r runtime.ClientRequest, _ strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param home_id
	if err := r.SetPathParam("home_id", swag.FormatInt64(o.HomeID)); err != nil {
		return err
	}
	if o.JSON != nil {
		if err := r.SetBodyParam(o.JSON); err != nil {
			return err
		}
	}

	// path param zone_id
	if err := r.SetPathParam("zone_id", swag.FormatInt64(o.ZoneID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
