// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AcFanSpeed Cooling system fan speed.
//
// swagger:model AcFanSpeed
type AcFanSpeed string

func NewAcFanSpeed(value AcFanSpeed) *AcFanSpeed {
	v := value
	return &v
}

const (

	// AcFanSpeedLOW captures enum value "LOW"
	AcFanSpeedLOW AcFanSpeed = "LOW"

	// AcFanSpeedMIDDLE captures enum value "MIDDLE"
	AcFanSpeedMIDDLE AcFanSpeed = "MIDDLE"

	// AcFanSpeedHIGH captures enum value "HIGH"
	AcFanSpeedHIGH AcFanSpeed = "HIGH"

	// AcFanSpeedAUTO captures enum value "AUTO"
	AcFanSpeedAUTO AcFanSpeed = "AUTO"
)

// for schema
var acFanSpeedEnum []interface{}

func init() {
	var res []AcFanSpeed
	if err := json.Unmarshal([]byte(`["LOW","MIDDLE","HIGH","AUTO"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		acFanSpeedEnum = append(acFanSpeedEnum, v)
	}
}

func (m AcFanSpeed) validateAcFanSpeedEnum(path, location string, value AcFanSpeed) error {
	if err := validate.EnumCase(path, location, value, acFanSpeedEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this ac fan speed
func (m AcFanSpeed) Validate(_ strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAcFanSpeedEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this ac fan speed based on context it is used
func (m AcFanSpeed) ContextValidate(_ context.Context, _ strfmt.Registry) error {
	return nil
}
