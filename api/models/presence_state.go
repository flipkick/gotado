// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// PresenceState Enum to represent presence state.
//
// swagger:model PresenceState
type PresenceState string

func NewPresenceState(value PresenceState) *PresenceState {
	v := value
	return &v
}

const (

	// PresenceStateHOME captures enum value "HOME"
	PresenceStateHOME PresenceState = "HOME"

	// PresenceStateAWAY captures enum value "AWAY"
	PresenceStateAWAY PresenceState = "AWAY"
)

// for schema
var presenceStateEnum []interface{}

func init() {
	var res []PresenceState
	if err := json.Unmarshal([]byte(`["HOME","AWAY"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		presenceStateEnum = append(presenceStateEnum, v)
	}
}

func (m PresenceState) validatePresenceStateEnum(path, location string, value PresenceState) error {
	if err := validate.EnumCase(path, location, value, presenceStateEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this presence state
func (m PresenceState) Validate(_ strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validatePresenceStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this presence state based on context it is used
func (m PresenceState) ContextValidate(_ context.Context, _ strfmt.Registry) error {
	return nil
}
